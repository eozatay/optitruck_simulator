% Search current path and add new path
mfile_Name      = mfilename;
mfile_FullPath  = mfilename('fullpath');
mfile_Path      = mfile_FullPath(1:end-numel(mfile_Name)-1);
UpperFolderName = mfile_Path;
indUpper        = strfind(UpperFolderName, '\');
UpperFolderName = UpperFolderName(1:indUpper(end)-1);
% Create RefMdlPath directory
ReportFolder    = [UpperFolderName, '\Report'];
if ~isdir(ReportFolder)
    mkdir(ReportFolder);
end
%% 1-Slope
FigName = 'Slope';
figure('WindowStyle','Docked','NumberTitle','off','Name',FigName);
AxesHandle.(FigName).AX(1) = subplot('Position', [0.06 0.07, 0.90, 0.90]);
hold on;grid on;
plot(DATA.MEAS.TEST.PreCru_Ctrl_PresentGrade.Time, DATA.MEAS.TEST.PreCru_Ctrl_PresentGrade.Data, 'r', 'Color', [0.8 0.1 0.1], 'LineWidth',3);
set(gca, 'FontSize', 12, 'FontWeight', 'Bold');
legend('Road Slope');
xlabel('Time [sec]', 'FontSize', 12, 'FontWeight', 'Bold');
ylabel('Road Slope [%]', 'FontSize', 12, 'FontWeight', 'Bold');
savefig([ReportFolder, '\', FigName, '.fig']);
%% 2-EOM
FigName = 'EOM';
figure('WindowStyle','Docked','NumberTitle','off','Name',FigName);
AxesHandle.(FigName).AX(1) = subplot('Position', [0.06 0.07, 0.90, 0.90]);
hold on;grid on;
plot(DATA.MEAS.TEST.ECU_numOperModAct_PHY.Time, DATA.MEAS.TEST.ECU_numOperModAct_PHY.Data, 'r', 'Color', [0.8 0.1 0.1], 'LineWidth',3);
set(gca, 'FontSize', 12, 'FontWeight', 'Bold');
legend('EOM');
xlabel('Time [sec]', 'FontSize', 12, 'FontWeight', 'Bold');
ylabel('Engine Operating Mode [-]', 'FontSize', 12, 'FontWeight', 'Bold');
savefig([ReportFolder, '\', FigName, '.fig']);
%% 3-Pedals - Alternative
FigName = 'DRV';
figure('WindowStyle','Docked','NumberTitle','off','Name',FigName);
AxesHandle.(FigName).AX(1) = subplot('Position', [0.06 0.54, 0.90, 0.43]);
hold on;grid on;
plot(DATA.MEAS.TEST.AccelPedalPos1.Time, DATA.MEAS.TEST.AccelPedalPos1.Data, 'r', 'Color', [0.8 0.1 0.1], 'LineWidth',3);
plot(DATA.SIM.TEST.DrvrMdl_prcAccrPedlPosn_PHY.Time, DATA.SIM.TEST.DrvrMdl_prcAccrPedlPosn_PHY.Data, 'b', 'Color', [0.0 0.5 0.8], 'LineWidth',3);
set(gca, 'FontSize', 12, 'FontWeight', 'Bold');
pltLabel = 'Accelerator Pedal';
legend(['Real ', pltLabel], ['Sim ', pltLabel]);
% xlabel('Time [sec]', 'FontSize', 12, 'FontWeight', 'Bold');
ylabel('Accelerator Pedal [%]', 'FontSize', 12, 'FontWeight', 'Bold');
AxesHandle.(FigName).AX(2) = subplot('Position', [0.06 0.07, 0.90, 0.43]);
hold on;grid on;
plot(DATA.MEAS.TEST.BrakeSwitch_CCVS_ECM.Time, DATA.MEAS.TEST.BrakeSwitch_CCVS_ECM.Data*100, 'r', 'Color', [0.8 0.1 0.1], 'LineWidth',3);
plot(DATA.MEAS.TEST.ECU_numOperModAct_PHY.Time, (DATA.MEAS.TEST.ECU_numOperModAct_PHY.Data == 5)*100, 'b', 'Color', [0.0 0.7 0.5], 'LineWidth',2);
plot(DATA.SIM.TEST.DrvrMdl_prcBrkPedlPosn_PHY.Time, (DATA.SIM.TEST.DrvrMdl_prcBrkPedlPosn_PHY.Data)*1, 'b', 'Color', [0.0 0.5 0.8], 'LineWidth',3);
set(gca, 'FontSize', 12, 'FontWeight', 'Bold');
pltLabel = 'Brake Pedal';
legend(['Real ', pltLabel], ['Real ', 'Engine Brake'], ['Sim ', pltLabel]);
xlabel('Time [sec]', 'FontSize', 12, 'FontWeight', 'Bold');
ylabel('Brake Pedal [%]', 'FontSize', 12, 'FontWeight', 'Bold');
%% 2-Vehicle Speed
FigName = 'VehSpd';
figure('WindowStyle','Docked','NumberTitle','off','Name',FigName);
AxesHandle.(FigName).AX(1) = subplot('Position', [0.06 0.07, 0.90, 0.90]);
hold on;grid on;
plot(DATA.MEAS.TEST.WheelBasedVehicleSpeed_CCVS_ECM.Time, DATA.MEAS.TEST.WheelBasedVehicleSpeed_CCVS_ECM.Data, 'r', 'Color', [0.8 0.1 0.1], 'LineWidth',3);
plot(DATA.SIM.TEST.LgtVehMdl_vVehSpd_PHY.Time, DATA.SIM.TEST.LgtVehMdl_vVehSpd_PHY.Data, 'b', 'Color', [0.0 0.5 0.8], 'LineWidth',3);
set(gca, 'FontSize', 12, 'FontWeight', 'Bold');
pltLabel = 'Vehicle Speed';
legend(['Real ', pltLabel], ['Sim ', pltLabel]);
xlabel('Time [sec]', 'FontSize', 12, 'FontWeight', 'Bold');
ylabel('Vehicle Speed [km/h]', 'FontSize', 12, 'FontWeight', 'Bold');
savefig([ReportFolder, '\', FigName, '.fig']);
%% 3-Engine Speed
FigName = 'EngSpd';
figure('WindowStyle','Docked','NumberTitle','off','Name',FigName);
AxesHandle.(FigName).AX(1) = subplot('Position', [0.06 0.07, 0.90, 0.90]);
hold on;grid on;
plot(DATA.MEAS.TEST.EngSpeed.Time, DATA.MEAS.TEST.EngSpeed.Data, 'r', 'Color', [0.8 0.1 0.1], 'LineWidth',3);
plot(DATA.SIM.TEST.TrsmMdl_nCrksft_PHY.Time, DATA.SIM.TEST.TrsmMdl_nCrksft_PHY.Data, 'b', 'Color', [0.0 0.5 0.8], 'LineWidth',3);
set(gca, 'FontSize', 12, 'FontWeight', 'Bold');
pltLabel = 'Engine Speed';
legend(['Real ', pltLabel], ['Sim ', pltLabel]);
xlabel('Time [sec]', 'FontSize', 12, 'FontWeight', 'Bold');
ylabel('Engine Speed [Rpm]', 'FontSize', 12, 'FontWeight', 'Bold');
savefig([ReportFolder, '\', FigName, '.fig']);
%% 4-Gear
FigName = 'Gear';
figure('WindowStyle','Docked','NumberTitle','off','Name',FigName);
AxesHandle.(FigName).AX(1) = subplot('Position', [0.06 0.07, 0.90, 0.90]);
hold on;grid on;
plot(DATA.MEAS.TEST.Tra_numGear.Time, DATA.MEAS.TEST.Tra_numGear.Data, 'r', 'Color', [0.8 0.1 0.1], 'LineWidth',3);
plot(DATA.SIM.TEST.TCU_numGear_PHY.Time, DATA.SIM.TEST.TCU_numGear_PHY.Data, 'b', 'Color', [0.0 0.5 0.8], 'LineWidth',3);
set(gca, 'FontSize', 12, 'FontWeight', 'Bold');
pltLabel = 'Gear';
legend(['Real ', pltLabel], ['Sim ', pltLabel]);
xlabel('Time [sec]', 'FontSize', 12, 'FontWeight', 'Bold');
ylabel('Gear [-]', 'FontSize', 12, 'FontWeight', 'Bold');
ylim([0 13]);
savefig([ReportFolder, '\', FigName, '.fig']);
%% 5-Cumulative Engine Power
NormScale = 4.51e5;
FigName = 'CumPwr';
figure('WindowStyle','Docked','NumberTitle','off','Name',FigName);
AxesHandle.(FigName).AX(1) = subplot('Position', [0.06 0.07, 0.90, 0.90]);
hold on;grid on;
plot(DATA.MEAS.TEST.CumEngPwr.Time, DATA.MEAS.TEST.CumEngPwr.Data/NormScale, 'r', 'Color', [0.8 0.1 0.1], 'LineWidth',3);
plot(DATA.SIM.TEST.CumEngPwr.Time, DATA.SIM.TEST.CumEngPwr.Data/NormScale, 'b', 'Color', [0.0 0.5 0.8], 'LineWidth',3);
set(gca, 'FontSize', 12, 'FontWeight', 'Bold');
pltLabel = 'Cumulative Engine Power';
legend(['Real ', pltLabel], ['Sim ', pltLabel], 'Location', 'east');
xlabel('Time [sec]', 'FontSize', 12, 'FontWeight', 'Bold');
ylabel('Normalized Cumulative Engine Power [-]', 'FontSize', 12, 'FontWeight', 'Bold');
TxtHnd = text(2700,0.975,['Delta : % ', num2str(100 - DATA.Metrics.PrcCumEngPwr, '%4.2f')], 'FontWeight', 'Bold', 'EdgeColor', [0.1 0.1 0.1], 'BackgroundColor', [0.8 0.8 0.8],'LineWidth',1);
savefig([ReportFolder, '\', FigName, '.fig']);
%% 6-Cumulative Fuel Flow
NormScale = 6.33e4;
FigName = 'CumFuel';
figure('WindowStyle','Docked','NumberTitle','off','Name',FigName);
AxesHandle.(FigName).AX(1) = subplot('Position', [0.06 0.07, 0.90, 0.90]);
hold on;grid on;
plot(DATA.MEAS.TEST.CumFuelFlow.Time, DATA.MEAS.TEST.CumFuelFlow.Data/NormScale, 'r', 'Color', [0.8 0.1 0.1], 'LineWidth',3);
plot(DATA.SIM.TEST.CumFuelFlow.Time, DATA.SIM.TEST.CumFuelFlow.Data/NormScale, 'b', 'Color', [0.0 0.5 0.8], 'LineWidth',3);
set(gca, 'FontSize', 12, 'FontWeight', 'Bold');
pltLabel = 'Cumulative Fuel';
legend(['Real ', pltLabel], ['Sim ', pltLabel], 'Location', 'east');
xlabel('Time [sec]', 'FontSize', 12, 'FontWeight', 'Bold');
ylabel('Normalized Cumulative Fuel [-]', 'FontSize', 12, 'FontWeight', 'Bold');
TxtHnd = text(2700,0.975,['Delta : % ', num2str(100 - DATA.Metrics.PrcCumFuelFlow, '%4.2f')], 'FontWeight', 'Bold', 'EdgeColor', [0.1 0.1 0.1], 'BackgroundColor', [0.8 0.8 0.8],'LineWidth',1);
savefig([ReportFolder, '\', FigName, '.fig']);
%% 7-Boost Pressure
NormScale   = 3e3;
NormX0      = 1e3;
FigName = 'PInMan';
figure('WindowStyle','Docked','NumberTitle','off','Name',FigName);
AxesHandle.(FigName).AX(1) = subplot('Position', [0.06 0.07, 0.90, 0.90]);
hold on;grid on;
plot(DATA.MEAS.TEST.Air_pIntkVUs.Time, (DATA.MEAS.TEST.Air_pIntkVUs.Data-NormX0)/NormScale, 'r', 'Color', [0.8 0.1 0.1], 'LineWidth',3);
plot(DATA.SIM.TEST.EngMdl_pIntkMnfld_PHY.Time, (DATA.SIM.TEST.EngMdl_pIntkMnfld_PHY.Data*1e-2 - NormX0)/NormScale, 'b', 'Color', [0.0 0.5 0.8], 'LineWidth',3);
set(gca, 'FontSize', 12, 'FontWeight', 'Bold');
pltLabel = 'Boost Pressure';
legend(['Real ', pltLabel], ['Sim ', pltLabel]);
xlabel('Time [sec]', 'FontSize', 12, 'FontWeight', 'Bold');
ylabel('Normalized Boost Pressure [-]', 'FontSize', 12, 'FontWeight', 'Bold');
ylim([0 1]);
%% 7-Boost Pressure Alternative
DATA.MEAS.TEST.Boost_Pressure       = DATA.MEAS.TEST.Air_pIntkVUs;
DATA.MEAS.TEST.Boost_Pressure.Data	= (DATA.MEAS.TEST.Air_pIntkVUs.Data - NormX0)/NormScale;
DATA.SIM.TEST.Boost_Pressure        = DATA.SIM.TEST.EngMdl_pIntkMnfld_PHY;
DATA.SIM.TEST.Boost_Pressure.Data 	= (DATA.SIM.TEST.EngMdl_pIntkMnfld_PHY.Data*1e-2 - NormX0)/NormScale;
zoom_interval       = [700, 1000];
zoom_factor         = 8;
FigName             = 'PInMan2';
figure('WindowStyle','Docked','NumberTitle','off','Name',FigName);
meas_label  = 'Boost_Pressure';
sim_label   = 'Boost_Pressure';
% Plot meas
X_Signal    = DATA.MEAS.TEST.(meas_label).Time;
Y_Signal    = DATA.MEAS.TEST.(meas_label).Data;
AxesHandle  = plot_PartialZoom(X_Signal, Y_Signal, meas_label, FigName, zoom_interval, zoom_factor);
% Plot sim
X_Signal    = DATA.SIM.TEST.(sim_label).Time;
Y_Signal    = DATA.SIM.TEST.(sim_label).Data;
AxesHandle  = plot_PartialZoom(X_Signal, Y_Signal, sim_label, FigName, zoom_interval, zoom_factor, AxesHandle);
AxesHandle.(FigName).AX(1).YLim = [0 1];
AxesHandle.(FigName).AX(2).YLim = [0 1];
AxesHandle.(FigName).AX(3).YLim = [0 1];
AxesHandle.(FigName).AX(1).YLabel.String        = 'Normalized Boost Pressure [-]';
AxesHandle.(FigName).AX(1).YLabel.FontWeight    = 'Bold';
AxesHandle.(FigName).AX(1).YLabel.FontSize      = 12;
AxesHandle.(FigName).AX(2).XLabel.String        = 'Time [sec]';
AxesHandle.(FigName).AX(2).XLabel.FontWeight    = 'Bold';
AxesHandle.(FigName).AX(2).XLabel.FontSize      = 12;
LgdStr{1}  	= ['Real ', strrep(meas_label, '_', '\_')];
LgdStr{2}   = ['Sim ', strrep(sim_label, '_', '\_')];
legend(AxesHandle.(FigName).AX(1), 'off');
legend(AxesHandle.(FigName).AX(2), LgdStr, 'Location','northwest');
savefig([ReportFolder, '\', FigName, '.fig']);
%% 8-Airflow
NormScale   = 1800;
NormX0      = 0;
FigName = 'Airflow';
figure('WindowStyle','Docked','NumberTitle','off','Name',FigName);
AxesHandle.(FigName).AX(1) = subplot('Position', [0.06 0.07, 0.90, 0.90]);
hold on;grid on;
plot(DATA.MEAS.TEST.AFS_dm.Time, (DATA.MEAS.TEST.AFS_dm.Data-NormX0)/NormScale, 'r', 'Color', [0.8 0.1 0.1], 'LineWidth',3);
plot(DATA.SIM.TEST.EngMdl_mflChrgdAir_PHY.Time, (DATA.SIM.TEST.EngMdl_mflChrgdAir_PHY.Data*3600 - NormX0)/NormScale, 'b', 'Color', [0.0 0.5 0.8], 'LineWidth',3);
set(gca, 'FontSize', 12, 'FontWeight', 'Bold');
pltLabel = 'Airflow';
legend(['Real ', pltLabel], ['Sim ', pltLabel]);
xlabel('Time [sec]', 'FontSize', 12, 'FontWeight', 'Bold');
ylabel('Normalized Airflow [-]', 'FontSize', 12, 'FontWeight', 'Bold');
ylim([0 1]);
%% 8-Airflow Alternative
DATA.MEAS.TEST.Airflow       = DATA.MEAS.TEST.AFS_dm;
DATA.MEAS.TEST.Airflow.Data	= (DATA.MEAS.TEST.AFS_dm.Data - NormX0)/NormScale;
DATA.SIM.TEST.Airflow        = DATA.SIM.TEST.EngMdl_mflChrgdAir_PHY;
DATA.SIM.TEST.Airflow.Data 	= (DATA.SIM.TEST.EngMdl_mflChrgdAir_PHY.Data*3600 - NormX0)/NormScale;
zoom_interval       = [700, 1000];
zoom_factor         = 8;
FigName             = 'Airflow2';
figure('WindowStyle','Docked','NumberTitle','off','Name',FigName);
meas_label  = 'Airflow';
sim_label   = 'Airflow';
% Plot meas
X_Signal    = DATA.MEAS.TEST.(meas_label).Time;
Y_Signal    = DATA.MEAS.TEST.(meas_label).Data;
AxesHandle  = plot_PartialZoom(X_Signal, Y_Signal, meas_label, FigName, zoom_interval, zoom_factor);
% Plot sim
X_Signal    = DATA.SIM.TEST.(sim_label).Time;
Y_Signal    = DATA.SIM.TEST.(sim_label).Data;
AxesHandle  = plot_PartialZoom(X_Signal, Y_Signal, sim_label, FigName, zoom_interval, zoom_factor, AxesHandle);
AxesHandle.(FigName).AX(1).YLim = [0 1];
AxesHandle.(FigName).AX(2).YLim = [0 1];
AxesHandle.(FigName).AX(3).YLim = [0 1];
AxesHandle.(FigName).AX(1).YLabel.String        = 'Normalized Airflow [-]';
AxesHandle.(FigName).AX(1).YLabel.FontWeight    = 'Bold';
AxesHandle.(FigName).AX(1).YLabel.FontSize      = 12;
AxesHandle.(FigName).AX(2).XLabel.String        = 'Time [sec]';
AxesHandle.(FigName).AX(2).XLabel.FontWeight    = 'Bold';
AxesHandle.(FigName).AX(2).XLabel.FontSize      = 12;
LgdStr{1}  	= ['Real ', strrep(meas_label, '_', '\_')];
LgdStr{2}   = ['Sim ', strrep(sim_label, '_', '\_')];
legend(AxesHandle.(FigName).AX(1), 'off');
legend(AxesHandle.(FigName).AX(2), LgdStr, 'Location','northwest');
savefig([ReportFolder, '\', FigName, '.fig']);
%% 9-Boost Pressure Control
NormScale   = 3e3;
NormX0      = 1e3;
FigName = 'PInManCtrl';
figure('WindowStyle','Docked','NumberTitle','off','Name',FigName);
AxesHandle.(FigName).AX(1) = subplot('Position', [0.06 0.07, 0.90, 0.90]);
hold on;grid on;
plot(DATA.SIM.TEST.ECU_pIntkMnfldDes_PHY.Time, (DATA.SIM.TEST.ECU_pIntkMnfldDes_PHY.Data*1e-2 - NormX0)/NormScale, 'r', 'Color', [0.8 0.1 0.1], 'LineWidth',3);
plot(DATA.SIM.TEST.EngMdl_pIntkMnfld_PHY.Time, (DATA.SIM.TEST.EngMdl_pIntkMnfld_PHY.Data*1e-2 - NormX0)/NormScale, 'b', 'Color', [0.0 0.5 0.8], 'LineWidth',3);
set(gca, 'FontSize', 12, 'FontWeight', 'Bold');
pltLabel = 'Boost Pressure';
legend(['Sim ', pltLabel, ' Ref'], ['Sim ', pltLabel]);
xlabel('Time [sec]', 'FontSize', 12, 'FontWeight', 'Bold');
ylabel('Normalized Boost Pressure [-]', 'FontSize', 12, 'FontWeight', 'Bold');
ylim([0 1]);
%% 9-Boost Pressure Control Alternative
DATA.MEAS.TEST.Boost_Pressure_Ref       = DATA.MEAS.TEST.PCR_pDesVal;
DATA.MEAS.TEST.Boost_Pressure_Ref.Data	= (DATA.MEAS.TEST.PCR_pDesVal.Data - NormX0)/NormScale;
DATA.SIM.TEST.Boost_Pressure_Ref        = DATA.SIM.TEST.ECU_pIntkMnfldDes_PHY;
DATA.SIM.TEST.Boost_Pressure_Ref.Data 	= (DATA.SIM.TEST.ECU_pIntkMnfldDes_PHY.Data*1e-2 - NormX0)/NormScale;
zoom_interval       = [700, 1000];
zoom_factor         = 8;
FigName             = 'PInManCtrl2';
figure('WindowStyle','Docked','NumberTitle','off','Name',FigName);
meas_label  = 'Boost_Pressure_Ref';
sim_label   = 'Boost_Pressure';
% Plot meas
X_Signal    = DATA.SIM.TEST.(meas_label).Time;
Y_Signal    = DATA.SIM.TEST.(meas_label).Data;
AxesHandle  = plot_PartialZoom(X_Signal, Y_Signal, meas_label, FigName, zoom_interval, zoom_factor);
% Plot sim
X_Signal    = DATA.SIM.TEST.(sim_label).Time;
Y_Signal    = DATA.SIM.TEST.(sim_label).Data;
AxesHandle  = plot_PartialZoom(X_Signal, Y_Signal, sim_label, FigName, zoom_interval, zoom_factor, AxesHandle);
AxesHandle.(FigName).AX(1).YLim = [0 1];
AxesHandle.(FigName).AX(2).YLim = [0 1];
AxesHandle.(FigName).AX(3).YLim = [0 1];
AxesHandle.(FigName).AX(1).YLabel.String        = 'Normalized Boost Pressure [-]';
AxesHandle.(FigName).AX(1).YLabel.FontWeight    = 'Bold';
AxesHandle.(FigName).AX(1).YLabel.FontSize      = 12;
AxesHandle.(FigName).AX(2).XLabel.String        = 'Time [sec]';
AxesHandle.(FigName).AX(2).XLabel.FontWeight    = 'Bold';
AxesHandle.(FigName).AX(2).XLabel.FontSize      = 12;
LgdStr{1}  	= ['Sim ', strrep(meas_label, '_', '\_')];
LgdStr{2}   = ['Sim ', strrep(sim_label, '_', '\_')];
legend(AxesHandle.(FigName).AX(1), 'off');
legend(AxesHandle.(FigName).AX(2), LgdStr, 'Location','northwest');
savefig([ReportFolder, '\', FigName, '.fig']);
%% 10-Airflow Control
NormScale   = 1800;
NormX0      = 0;
FigName = 'AirflowCtrl';
figure('WindowStyle','Docked','NumberTitle','off','Name',FigName);
AxesHandle.(FigName).AX(1) = subplot('Position', [0.06 0.07, 0.90, 0.90]);
hold on;grid on;
plot(DATA.SIM.TEST.ECU_mflChrgdAirDes_PHY.Time, (DATA.SIM.TEST.ECU_mflChrgdAirDes_PHY.Data*3600 - NormX0)/NormScale, 'r', 'Color', [0.8 0.1 0.1], 'LineWidth',3);
plot(DATA.SIM.TEST.EngMdl_mflChrgdAir_PHY.Time, (DATA.SIM.TEST.EngMdl_mflChrgdAir_PHY.Data*3600 - NormX0)/NormScale, 'b', 'Color', [0.0 0.5 0.8], 'LineWidth',3);
set(gca, 'FontSize', 12, 'FontWeight', 'Bold');
pltLabel = 'Airflow';
legend(['Sim ', pltLabel, ' Ref'], ['Sim ', pltLabel]);
xlabel('Time [sec]', 'FontSize', 12, 'FontWeight', 'Bold');
ylabel('Normalized Airflow [-]', 'FontSize', 12, 'FontWeight', 'Bold');
ylim([0 1]);
%% 10-Airflow Control Alternative
DATA.MEAS.TEST.Airflow_Ref       = DATA.MEAS.TEST.AirCtl_dmAirDesDyn_r32;
DATA.MEAS.TEST.Airflow_Ref.Data	= (DATA.MEAS.TEST.AirCtl_dmAirDesDyn_r32.Data - NormX0)/NormScale;
DATA.SIM.TEST.Airflow_Ref        = DATA.SIM.TEST.ECU_mflChrgdAirDes_PHY;
DATA.SIM.TEST.Airflow_Ref.Data 	= (DATA.SIM.TEST.ECU_mflChrgdAirDes_PHY.Data*3600 - NormX0)/NormScale;
zoom_interval       = [700, 1000];
zoom_factor         = 8;
FigName             = 'AirflowCtrl2';
figure('WindowStyle','Docked','NumberTitle','off','Name',FigName);
meas_label  = 'Airflow_Ref';
sim_label   = 'Airflow';
% Plot meas
X_Signal    = DATA.SIM.TEST.(meas_label).Time;
Y_Signal    = DATA.SIM.TEST.(meas_label).Data;
AxesHandle  = plot_PartialZoom(X_Signal, Y_Signal, meas_label, FigName, zoom_interval, zoom_factor);
% Plot sim
X_Signal    = DATA.SIM.TEST.(sim_label).Time;
Y_Signal    = DATA.SIM.TEST.(sim_label).Data;
AxesHandle  = plot_PartialZoom(X_Signal, Y_Signal, sim_label, FigName, zoom_interval, zoom_factor, AxesHandle);
AxesHandle.(FigName).AX(1).YLim = [0 1];
AxesHandle.(FigName).AX(2).YLim = [0 1];
AxesHandle.(FigName).AX(3).YLim = [0 1];
AxesHandle.(FigName).AX(1).YLabel.String        = 'Normalized Airflow [-]';
AxesHandle.(FigName).AX(1).YLabel.FontWeight    = 'Bold';
AxesHandle.(FigName).AX(1).YLabel.FontSize      = 12;
AxesHandle.(FigName).AX(2).XLabel.String        = 'Time [sec]';
AxesHandle.(FigName).AX(2).XLabel.FontWeight    = 'Bold';
AxesHandle.(FigName).AX(2).XLabel.FontSize      = 12;
LgdStr{1}  	= ['Sim ', strrep(meas_label, '_', '\_')];
LgdStr{2}   = ['Sim ', strrep(sim_label, '_', '\_')];
legend(AxesHandle.(FigName).AX(1), 'off');
legend(AxesHandle.(FigName).AX(2), LgdStr, 'Location','northwest');
savefig([ReportFolder, '\', FigName, '.fig']);
%% 11-ExhTemp
NormScale   = 500;
NormX0      = 0;
FigName = 'ExhTemp';
figure('WindowStyle','Docked','NumberTitle','off','Name',FigName);
AxesHandle.(FigName).AX(1) = subplot('Position', [0.06 0.07, 0.90, 0.90]);
hold on;grid on;
% plot(DATA.MEAS.TEST.T3LimCL_tTrbnUs_mp.Time, (DATA.MEAS.TEST.T3LimCL_tTrbnUs_mp.Data-NormX0)/NormScale, 'r', 'Color', [0.8 0.1 0.1], 'LineWidth',3);
plot(DATA.MEAS.TEST.Exh_tOxiCatUs.Time, (DATA.MEAS.TEST.Exh_tOxiCatUs.Data-NormX0)/NormScale, 'r', 'Color', [0.8 0.1 0.1], 'LineWidth',3);
plot(DATA.SIM.TEST.EngMdl_tExhT_PHY.Time, (DATA.SIM.TEST.EngMdl_tExhT_PHY.Data - NormX0)/NormScale, 'b', 'Color', [0.0 0.5 0.8], 'LineWidth',3);
set(gca, 'FontSize', 12, 'FontWeight', 'Bold');
pltLabel = 'Exhaust Temperature';
legend(['Real ', pltLabel], ['Sim ', pltLabel]);
xlabel('Time [sec]', 'FontSize', 12, 'FontWeight', 'Bold');
ylabel('Normalized Exhaust Temperature [-]', 'FontSize', 12, 'FontWeight', 'Bold');
ylim([0 1]);
savefig([ReportFolder, '\', FigName, '.fig']);
%% 12-Cumulative Nox Flow (Engine Out)
NormScale   = 2.801e6;
FigName = 'CumNox_EngOut';
figure('WindowStyle','Docked','NumberTitle','off','Name',FigName);
AxesHandle.(FigName).AX(1) = subplot('Position', [0.06 0.07, 0.90, 0.90]);
hold on;grid on;
plot(DATA.MEAS.TEST.CumEngOutNoxFlow.Time, DATA.MEAS.TEST.CumEngOutNoxFlow.Data/NormScale, 'r', 'Color', [0.8 0.1 0.1], 'LineWidth',3);
plot(DATA.SIM.TEST.CumEngOutNoxFlow.Time, DATA.SIM.TEST.CumEngOutNoxFlow.Data/NormScale, 'b', 'Color', [0.0 0.5 0.8], 'LineWidth',3);
set(gca, 'FontSize', 12, 'FontWeight', 'Bold');
pltLabel = 'Cumulative Engine Out Nox';
legend(['Real ', pltLabel], ['Sim ', pltLabel], 'Location', 'east');
xlabel('Time [sec]', 'FontSize', 12, 'FontWeight', 'Bold');
ylabel('Normalized Cumulative Engine Out Nox [-]', 'FontSize', 12, 'FontWeight', 'Bold');
ylim([0 1]);
TxtHnd = text(2650,0.975,['Delta : % ', num2str(100 - DATA.Metrics.PrcCumEngOutNoxFlow, '%4.2f')], 'FontWeight', 'Bold', 'EdgeColor', [0.1 0.1 0.1], 'BackgroundColor', [0.8 0.8 0.8],'LineWidth',1);
savefig([ReportFolder, '\', FigName, '.fig']);
%% 13-ScrTemp
NormScale   = 500;
NormX0      = 0;
FigName = 'ScrTemp';
figure('WindowStyle','Docked','NumberTitle','off','Name',FigName);
AxesHandle.(FigName).AX(1) = subplot('Position', [0.06 0.07, 0.90, 0.90]);
hold on;grid on;
plot(DATA.MEAS.TEST.SCR_tUCatUsT.Time, (DATA.MEAS.TEST.SCR_tUCatUsT.Data-NormX0)/NormScale, 'r', 'Color', [0.8 0.1 0.1], 'LineWidth',3);
plot(DATA.SIM.TEST.ExhATSysMdl_tPMFilDs_PHY.Time, (DATA.SIM.TEST.ExhATSysMdl_tPMFilDs_PHY.Data-NormX0)/NormScale, 'b', 'Color', [0.0 0.5 0.8], 'LineWidth',3);
set(gca, 'FontSize', 12, 'FontWeight', 'Bold');
pltLabel = 'Scr Temperature';
legend(['Real ', pltLabel], ['Sim ', pltLabel]);
xlabel('Time [sec]', 'FontSize', 12, 'FontWeight', 'Bold');
ylabel('Normalized Scr Temperature [-]', 'FontSize', 12, 'FontWeight', 'Bold');
ylim([0 1]);
savefig([ReportFolder, '\', FigName, '.fig'])
%% 14-Cumulative Nox Flow (Scr Out)
NormScale   = 2.7e4;
FigName = 'CumNox_ScrOut';
figure('WindowStyle','Docked','NumberTitle','off','Name',FigName);
AxesHandle.(FigName).AX(1) = subplot('Position', [0.06 0.07, 0.90, 0.90]);
hold on;grid on;
plot(DATA.MEAS.TEST.CumScrOutNoxFlow.Time, DATA.MEAS.TEST.CumScrOutNoxFlow.Data/NormScale, 'r', 'Color', [0.8 0.1 0.1], 'LineWidth',3);
plot(DATA.SIM.TEST.CumScrOutNoxFlow.Time, DATA.SIM.TEST.CumScrOutNoxFlow.Data/NormScale, 'b', 'Color', [0.0 0.5 0.8], 'LineWidth',3);
set(gca, 'FontSize', 12, 'FontWeight', 'Bold');
pltLabel = 'Cumulative Tailpipe Nox';
legend(['Real ', pltLabel], ['Sim ', pltLabel], 'Location', 'east');
xlabel('Time [sec]', 'FontSize', 12, 'FontWeight', 'Bold');
ylabel('Normalized Cumulative Tailpipe Nox [-]', 'FontSize', 12, 'FontWeight', 'Bold');
ylim([0 1]);
TxtHnd = text(2650,0.975,['Delta : % ', num2str(100 - DATA.Metrics.PrcCumScrOutNoxFlow, '%4.2f')], 'FontWeight', 'Bold', 'EdgeColor', [0.1 0.1 0.1], 'BackgroundColor', [0.8 0.8 0.8],'LineWidth',1);
savefig([ReportFolder, '\', FigName, '.fig']);
%% 15-Cumulative Urea Flow
NormScale   = 15.5e5;
FigName = 'CumUrea';
figure('WindowStyle','Docked','NumberTitle','off','Name',FigName);
AxesHandle.(FigName).AX(1) = subplot('Position', [0.06 0.07, 0.90, 0.90]);
hold on;grid on;
plot(DATA.MEAS.TEST.CumUreaFlow.Time, DATA.MEAS.TEST.CumUreaFlow.Data/NormScale, 'r', 'Color', [0.8 0.1 0.1], 'LineWidth',3);
plot(DATA.SIM.TEST.CumUreaFlow.Time, DATA.SIM.TEST.CumUreaFlow.Data/NormScale, 'b', 'Color', [0.0 0.5 0.8], 'LineWidth',3);
set(gca, 'FontSize', 12, 'FontWeight', 'Bold');
pltLabel = 'Cumulative Urea';
legend(['Real ', pltLabel], ['Sim ', pltLabel], 'Location', 'east');
xlabel('Time [sec]', 'FontSize', 12, 'FontWeight', 'Bold');
ylabel('Normalized Cumulative Urea [-]', 'FontSize', 12, 'FontWeight', 'Bold');
ylim([0 1]);
TxtHnd = text(2650,0.975,['Delta : % ', num2str(100 - DATA.Metrics.PrcCumUreaFlow, '%4.2f')], 'FontWeight', 'Bold', 'EdgeColor', [0.1 0.1 0.1], 'BackgroundColor', [0.8 0.8 0.8],'LineWidth',1);
savefig([ReportFolder, '\', FigName, '.fig']);
%% 16-Scr Conversion Efficiency
NormScale   = 1;
FigName = 'CumScr_Eff';
figure('WindowStyle','Docked','NumberTitle','off','Name',FigName);
AxesHandle.(FigName).AX(1) = subplot('Position', [0.06 0.07, 0.90, 0.90]);
hold on;grid on;
plot(DATA.MEAS.TEST.CumScrOutNoxFlow.Time, (1 - DATA.MEAS.TEST.CumScrOutNoxFlow.Data./DATA.MEAS.TEST.CumEngOutNoxFlow.Data)/NormScale*100, 'r', 'Color', [0.8 0.1 0.1], 'LineWidth',3);
plot(DATA.SIM.TEST.CumScrOutNoxFlow.Time, (1 - DATA.SIM.TEST.CumScrOutNoxFlow.Data./DATA.SIM.TEST.CumEngOutNoxFlow.Data)/NormScale*100, 'b', 'Color', [0.0 0.5 0.8], 'LineWidth',3);
set(gca, 'FontSize', 12, 'FontWeight', 'Bold');
pltLabel = 'Cumulative Scr Efficiency';
legend(['Real ', pltLabel], ['Sim ', pltLabel], 'Location', 'east');
xlabel('Time [sec]', 'FontSize', 12, 'FontWeight', 'Bold');
ylabel('Cumulative Scr Efficiency [%]', 'FontSize', 12, 'FontWeight', 'Bold');
ylim([95 100]);
meas_ScrEff = DATA.MEAS.TEST.CumScrOutNoxFlow.Data(end)./DATA.MEAS.TEST.CumEngOutNoxFlow.Data(end);
sim_ScrEff = DATA.SIM.TEST.CumScrOutNoxFlow.Data(end)./DATA.SIM.TEST.CumEngOutNoxFlow.Data(end);
TxtHnd = text(2650,0.995*100,['Delta : % ', num2str((meas_ScrEff - sim_ScrEff)*100, '%4.2f')], 'FontWeight', 'Bold', 'EdgeColor', [0.1 0.1 0.1], 'BackgroundColor', [0.8 0.8 0.8],'LineWidth',1);
savefig([ReportFolder, '\', FigName, '.fig']);